# Send 404 to unhandled requests
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    server_name _;
    access_log off;

    error_page 404 /404-error.html;

    location / {
            return 404;
    }

    location /404-error.html {
        root /var/lib/dokku/data/nginx-vhosts/dokku-errors/haas;
        internal;
    }
}

# Redirect Hack Club-owned domains to HTTPS
server {
    listen 80;
    listen [::]:80;

    server_name *.haas.hackclub.com .hackclub.app
    access_log off;

    return 307 https://$host:443$request_uri;
}

# Redirect hackclub.app to haas.hackclub.com
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name hackclub.app;
    ssl_certificate /etc/letsencrypt/live/hackclub.app/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/hackclub.app/privkey.pem;
    access_log off;

    return 307 https://haas.hackclub.com:443;
}

# HTTPS for *.hackclub.app
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name *.hackclub.app;
    ssl_certificate /etc/letsencrypt/live/hackclub.app/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/hackclub.app/privkey.pem;
    access_log off;

    error_page 404 /404-error.html;

    location / {
            return 404;
    }

    location /404-error.html {
        root /var/lib/dokku/data/nginx-vhosts/dokku-errors/haas;
        internal;
    }
}

# HTTPS for *.haas.hackclub.com
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name *.haas.hackclub.com;
    ssl_certificate /etc/letsencrypt/live/haas.hackclub.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/haas.hackclub.com/privkey.pem;
    access_log off;

    error_page 404 /404-error.html;

    location / {
            return 404;
    }

    location /404-error.html {
        root /var/lib/dokku/data/nginx-vhosts/dokku-errors/haas;
        internal;
    }
}